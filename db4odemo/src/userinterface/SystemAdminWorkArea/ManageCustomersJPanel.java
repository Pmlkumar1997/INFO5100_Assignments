/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;
import Business.Customer.Customer;
import Business.Customer.CustomerDirectory;
import Business.EcoSystem;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author mohithparvataneni
 */
public class ManageCustomersJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageCustomersJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
    DefaultTableModel model;
    int row,col;
    public ManageCustomersJPanel(JPanel userProcessContainer, EcoSystem system ) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        buttonGroupSex.add(btnMale);
        buttonGroupSex.add(btnFemale);
        model = (DefaultTableModel) tableCustomer.getModel();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buttonGroupSex = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnMale = new javax.swing.JRadioButton();
        btnFemale = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        txtMail = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtContact = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableCustomer = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtpwd = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Name");

        jLabel2.setText("Age");

        jLabel3.setText("Sex");

        btnMale.setText("Male");

        btnFemale.setText("Female");

        jLabel4.setText("Mail ID");

        jLabel5.setText("Contact");

        btnSave.setBackground(new java.awt.Color(102, 204, 255));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        tableCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Age", "Sex", "Mail ID", "Contact", "Username", "Password"
            }
        ));
        tableCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCustomerMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableCustomer);

        btnBack.setBackground(new java.awt.Color(102, 204, 255));
        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel6.setText("Username");

        jLabel7.setText("Password");

        btnUpdate.setBackground(new java.awt.Color(102, 204, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(102, 204, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnView.setBackground(new java.awt.Color(102, 204, 255));
        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("Manage Customer");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addComponent(btnSave)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addGap(18, 18, 18)
                        .addComponent(btnView))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 705, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(93, 93, 93)
                            .addComponent(btnBack))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(235, 235, 235)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7))
                                    .addGap(86, 86, 86)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(btnMale)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btnFemale))
                                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtUser, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtpwd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE))))
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(2, 2, 2)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(btnMale)
                            .addComponent(btnFemale))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5))
                    .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtpwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnView))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(93, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        String name = txtName.getText();
        String strAge = txtAge.getText();
        String sex = getSex();
        String mail = txtMail.getText();
        String contact = txtContact.getText();
        String user = txtUser.getText();
        String pwd = txtpwd.getText();
        
        if (name.isEmpty()||strAge.isEmpty() || sex.isEmpty() || mail.isEmpty() || contact.isEmpty() || user.isEmpty() || pwd.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "One or More fields are empty..!", "Empty Fields", 2);
            return;
        }
        
        if (!isNumber(strAge))
        {
            JOptionPane.showMessageDialog(this,"Invalid Age. Please insert a number");
            return;
        }
        
        if (!contact.matches("^\\d{10}$"))
        {
            JOptionPane.showMessageDialog(this,"Enter a valid phone number");
            return;
        }
        
        
        if (!system.getUserAccountDirectory().checkIfUsernameIsUnique(user))
        {
            JOptionPane.showMessageDialog(this,"User ID exits...please select a different username");
            return;
        }
        
        int age = Integer.parseInt(strAge);
        
        Customer customer = new Customer(name, age, sex, mail, contact, user, pwd);
        system.getCustomerDirectory().addCustomer(customer);
        system.getUserAccountDirectory().createCustomerAccount(user, pwd, customer);
        
        displayCustomers();

        JOptionPane.showMessageDialog(this, "Customer information added successfully.!!", "Added customer",1);
        clearField();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        
        
        String updatename = txtName.getText();
        String updatestrAge = txtAge.getText();
        String updatesex = getSex();
        String updatemail = txtMail.getText();
        String updatecontact = txtContact.getText();
        String updateuser = txtUser.getText();
        String updatepwd = txtpwd.getText();
      
        if (updatename.isEmpty()||updatestrAge.isEmpty() || updatesex.isEmpty() || updatemail.isEmpty() || updatecontact.isEmpty() || updateuser.isEmpty() || updatepwd.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "One or More fields are empty..!", "Empty Fields", 2);
            return;
        }
        
        if (!isNumber(updatestrAge))
        {
            JOptionPane.showMessageDialog(this,"Invalid Age. Please insert a number");
            return;
        }
        
        if (!updatecontact.matches("^\\d{10}$"))
        {
            JOptionPane.showMessageDialog(this,"Enter a valid phone number");
            return;
        }
        
//        if (!system.getUserAccountDirectory().checkIfUsernameIsUnique(updateuser))
//        {
//            JOptionPane.showMessageDialog(null,"User ID exits...please select a different username");
//            return;
//        }
        
        int updateage = Integer.parseInt(updatestrAge);
        
        String username = model.getValueAt(row, 5).toString();
        
        system.getUserAccountDirectory().removeUserAccount(username);
        
        //Customer customer = new Customer(updatename, updateage, updatesex, updatemail, updatecontact, updateuser, updatepwd);
        
        system.getCustomerDirectory().getcustomerList().get(row).setName(updatename);
        system.getCustomerDirectory().getcustomerList().get(row).setAge(updateage);
        system.getCustomerDirectory().getcustomerList().get(row).setGender(updatesex);
        system.getCustomerDirectory().getcustomerList().get(row).setEmail(updatemail);
        system.getCustomerDirectory().getcustomerList().get(row).setContact(updatecontact);
        system.getCustomerDirectory().getcustomerList().get(row).setPassword(updatepwd);
        
        Customer customer = system.getCustomerDirectory().getcustomerList().get(row);
        
        system.getUserAccountDirectory().createCustomerAccount(updateuser, updatepwd, customer);
        
        if (!username.equals(updateuser))
        {
           JOptionPane.showMessageDialog(this, "username cannot be changed", "change username", 2);
           return;
        }
        
        displayCustomers();

        JOptionPane.showMessageDialog(this, "Customer information updated successfully.!!", "updated customer",1);
        clearField();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tableCustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCustomerMouseClicked
        
        row = tableCustomer.getSelectedRow();
        col = tableCustomer.getColumnCount();
        
        txtName.setText(model.getValueAt(row, 0).toString());
        txtAge.setText(model.getValueAt(row, 1).toString());
        if (model.getValueAt(row, 2).toString().equals("Male"))
        {
            btnMale.doClick();
        }
        if (model.getValueAt(row, 2).toString().equals("Female"))
        {
            btnFemale.doClick();
        }
        txtMail.setText(model.getValueAt(row, 3).toString());
        txtContact.setText(model.getValueAt(row, 4).toString());
        txtUser.setText(model.getValueAt(row, 5).toString());
        txtpwd.setText(model.getValueAt(row, 6).toString());
        
    }//GEN-LAST:event_tableCustomerMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Delete this data", "Delete", dialogButton);
        if (dialogResult == 0)
        {
            row = tableCustomer.getSelectedRow();
            system.getCustomerDirectory().getcustomerList().remove(row);
            String UserName = model.getValueAt(row, 5).toString();
            system.getUserAccountDirectory().removeUserAccount(UserName);
            displayCustomers();
            clearField();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        
        model.setRowCount(0);
        displayCustomers();
    }//GEN-LAST:event_btnViewActionPerformed
    
    public void clearField(){
        
        txtName.setText("");
        txtAge.setText("");
        txtMail.setText("");
        txtContact.setText("");
        txtUser.setText("");
        txtpwd.setText("");
        buttonGroupSex.clearSelection();
    }
    
    public String getSex(){
        
        if(btnMale.isSelected()) return "Male";
        else if(btnFemale.isSelected()) return "Female";
        return "";
    }
    
    private static boolean isNumber(String n) {
		try {
			Integer.parseInt(n);
			return true;
		} catch (NumberFormatException nfe) {
			return false;
		}
    }
    
    public void displayCustomers(){
        
        model.setRowCount(0);
        
        for(Customer customer : system.getCustomerDirectory().getcustomerList()){            
            Object[] objs = {customer.getName(),customer.getAge(),customer.getGender(),customer.getEmail(),customer.getContact(),customer.getUserName(),customer.getPassword()};
            model.addRow(objs);
        }
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JRadioButton btnFemale;
    private javax.swing.JRadioButton btnMale;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.ButtonGroup buttonGroupSex;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tableCustomer;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtMail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtUser;
    private javax.swing.JTextField txtpwd;
    // End of variables declaration//GEN-END:variables
}
