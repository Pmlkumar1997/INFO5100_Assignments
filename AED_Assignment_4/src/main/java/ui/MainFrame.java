/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.ImageIcon;
import model.City;
import model.Community;
import model.House;
import model.PatientDirectory;
import model.Patient;
import model.Person;
import model.PersonDirectory;

/**
 *
 * @author mohithparvataneni
 */
public class MainFrame extends javax.swing.JFrame {

    
    private PatientDirectory patientDirectory;
    private PersonDirectory personDirectory;
    String personCsvFilePath =  "/Users/mohithparvataneni/Desktop/AEDAssignments/INFO5100_Assignments/AED_Assignment_4/Person.csv";
    String patientCsvFilePath =  "/Users/mohithparvataneni/Desktop/AEDAssignments/INFO5100_Assignments/AED_Assignment_4/Patient.csv";
  
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        
        this.patientDirectory = new PatientDirectory();
        this.personDirectory = new PersonDirectory();
        readPatientFromCSV();
        readPersonFromCSV();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPanel = new javax.swing.JSplitPane();
        leftPanel = new javax.swing.JPanel();
        btnPatientDirectory = new javax.swing.JButton();
        btnAppointment = new javax.swing.JButton();
        btnPersonDirectory = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        rightPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Patient Encounter Management System");
        setBackground(new java.awt.Color(0, 102, 102));

        leftPanel.setBackground(new java.awt.Color(204, 255, 204));

        btnPatientDirectory.setText("Patient Directory");
        btnPatientDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientDirectoryActionPerformed(evt);
            }
        });

        btnAppointment.setText("Patient Encounter");
        btnAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAppointmentActionPerformed(evt);
            }
        });

        btnPersonDirectory.setText("Person Directory");
        btnPersonDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPersonDirectoryActionPerformed(evt);
            }
        });

        btnHome.setText("Home Page");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnPatientDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnPersonDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnHome, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(btnHome)
                .addGap(52, 52, 52)
                .addComponent(btnPersonDirectory)
                .addGap(42, 42, 42)
                .addComponent(btnPatientDirectory)
                .addGap(39, 39, 39)
                .addComponent(btnAppointment)
                .addContainerGap(617, Short.MAX_VALUE))
        );

        splitPanel.setLeftComponent(leftPanel);

        rightPanel.setBackground(new java.awt.Color(204, 255, 204));
        rightPanel.setPreferredSize(new java.awt.Dimension(1089, 999));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("Welcome to Patient Encounter Management System..!");

        jLabel2.setIcon(new javax.swing.ImageIcon("/Users/mohithparvataneni/Downloads/hospitalsystem.png")); // NOI18N

        javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(rightPanelLayout);
        rightPanelLayout.setHorizontalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rightPanelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1582, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(rightPanelLayout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 929, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        rightPanelLayout.setVerticalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 864, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        splitPanel.setRightComponent(rightPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1826, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(splitPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 993, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPatientDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientDirectoryActionPerformed
        
        PatientPanel panel = new PatientPanel(patientDirectory);
        splitPanel.setRightComponent(panel);
    }//GEN-LAST:event_btnPatientDirectoryActionPerformed

    private void btnAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAppointmentActionPerformed
        
        AppointmentPanel panel1 = new AppointmentPanel(patientDirectory);
        splitPanel.setRightComponent(panel1);
    }//GEN-LAST:event_btnAppointmentActionPerformed

    private void btnPersonDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPersonDirectoryActionPerformed
        
        PersonPanel panel1 = new PersonPanel(personDirectory);
        splitPanel.setRightComponent(panel1);
    }//GEN-LAST:event_btnPersonDirectoryActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        
        splitPanel.setRightComponent(rightPanel);
    }//GEN-LAST:event_btnHomeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    
    public void readPatientFromCSV(){
               
        String line = "";
        String splitBy = ",";
        try {
            BufferedReader br = new BufferedReader(new FileReader(patientCsvFilePath));  
        
            while ((line = br.readLine()) != null)    
            {  
                String[] patientDetails = line.split(splitBy);
            
                String patientId = patientDetails[0];
                String firstName = patientDetails[1];
                String lastName = patientDetails[2];
                String strAge = patientDetails[3];
                int age = Integer.parseInt(strAge);
                String sex = patientDetails[4].strip();
                String houseNumber = patientDetails[5];
                String streetName = patientDetails[6];
                String strCommunity = patientDetails[7];
                String strCity = patientDetails[8];
                String state = patientDetails[9];
                String strZip = patientDetails[10];
                int zip = Integer.parseInt(strZip); 
                String phoneNo = patientDetails[11];
                String maritalStatus = patientDetails[12].strip();
             
                City city = new City(strCity);
                Community community = new Community(strCommunity, city);
                House house = new House(houseNumber,streetName,community,state,zip);
                Patient patient = new Patient(firstName, lastName, phoneNo, sex, age, house, maritalStatus,patientId);
                
                patientDirectory.addPatient(patient);
            
             }  

            
        } catch (IOException e)   
            {  
            e.printStackTrace();  
            } 

    }
    
    public void readPersonFromCSV(){
               
        String line = "";
        String splitBy = ",";
        try {
            BufferedReader br = new BufferedReader(new FileReader(personCsvFilePath));  
        
            while ((line = br.readLine()) != null)    
            {  
                String[] personDetails = line.split(splitBy);
                
                String firstName = personDetails[0];
                String lastName = personDetails[1];
                String strAge = personDetails[2];
                int age = Integer.parseInt(strAge);
                String sex = personDetails[3].strip();
                String houseNumber = personDetails[4];
                String streetName = personDetails[5];
                String strCommunity = personDetails[6];
                String strCity = personDetails[7];
                String state = personDetails[8];
                String strZip = personDetails[9];
                int zip = Integer.parseInt(strZip); 
                String phoneNo = personDetails[10];
                String maritalStatus = personDetails[11].strip();
             
                City city = new City(strCity);
                Community community = new Community(strCommunity, city);
                House house = new House(houseNumber,streetName,community,state,zip);
                Person person = new Person(firstName, lastName, phoneNo, sex, age, house, maritalStatus);
                
                personDirectory.addPerson(person);
            
             }  

            
        } catch (IOException e)   
            {  
            e.printStackTrace();  
            } 

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAppointment;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnPatientDirectory;
    private javax.swing.JButton btnPersonDirectory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JSplitPane splitPanel;
    // End of variables declaration//GEN-END:variables
}
