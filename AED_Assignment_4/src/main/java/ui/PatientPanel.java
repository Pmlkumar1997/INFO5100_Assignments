/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.House;
import model.PatientDirectory;
import model.Patient;
import model.City;
import model.Community;

/**
 *
 * @author mohithparvataneni
 */
public class PatientPanel extends javax.swing.JPanel {

    
    private PatientDirectory patientDirectory;
    DefaultTableModel model;
    int row,col;
    
    /**
     * Creates new form PatientPanel
     */
    public PatientPanel(PatientDirectory patientDirectory) {
        initComponents();
        this.patientDirectory = patientDirectory;
        model = (DefaultTableModel) patientTable.getModel();
        buttonGroupSex.add(btnMale);
        buttonGroupSex.add(btnFemale);
        buttonGroupMarried.add(btnSingle);
        buttonGroupMarried.add(btnMarried);
        //readCSV();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupSex = new javax.swing.ButtonGroup();
        buttonGroupMarried = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtPatientID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtFname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnMale = new javax.swing.JRadioButton();
        btnFemale = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        boxCommunity = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnSingle = new javax.swing.JRadioButton();
        btnMarried = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        txtState = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtZip = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        btnAddPatient = new javax.swing.JButton();
        btnUpdatePatient = new javax.swing.JButton();
        btnDeletePatient = new javax.swing.JButton();
        btnViewPatients = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtLname = new javax.swing.JTextField();
        txtHno = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtStreet = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtSearchFname = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtSearchLname = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtSearchID = new javax.swing.JTextField();
        btnSearchPatient = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        boxSearchCommunity = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 255, 204));
        setToolTipText("Mange Patient Information");
        setPreferredSize(new java.awt.Dimension(1099, 999));

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));

        jLabel2.setText("Patient ID");

        jLabel3.setText("First Name");

        jLabel4.setText("Age");

        jLabel6.setText("Sex");

        btnMale.setText("Male");

        btnFemale.setText("Female");

        jLabel7.setText("Community");

        boxCommunity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Boylston", "Roxbury", "Fenway", "Prudential" }));

        jLabel8.setText("House Number");

        jLabel9.setText("Marital Status");

        btnSingle.setText("Single");

        btnMarried.setText("Married");

        jLabel10.setText("City");

        jLabel11.setText("State");

        jLabel12.setText("Zip Code");

        jLabel13.setText("Phone Number");

        btnAddPatient.setText("Add");
        btnAddPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPatientActionPerformed(evt);
            }
        });

        btnUpdatePatient.setText("Update");
        btnUpdatePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePatientActionPerformed(evt);
            }
        });

        btnDeletePatient.setText("Delete");
        btnDeletePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePatientActionPerformed(evt);
            }
        });

        btnViewPatients.setText("View");
        btnViewPatients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientsActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        patientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient ID", "First Name", "Last Name", "Age", "Sex", "H:No", "Street", "Community", "City", "State", "Zip Code", "Contact", "Marital Status"
            }
        ));
        patientTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                patientTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(patientTable);

        jLabel1.setText("Last Name");

        jLabel14.setText("Street Name");

        jLabel5.setText("First Name");

        jLabel15.setText("Last Name");

        jLabel16.setText("Community");

        jLabel17.setText("Patient ID");

        btnSearchPatient.setText("Search");
        btnSearchPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchPatientActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 51, 0));
        jLabel18.setText("Patient Search");

        boxSearchCommunity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Boylston", "Roxbury", "Fenway", "Prudential" }));

        jLabel19.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 51, 0));
        jLabel19.setText("Manage Patient Information");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(btnAddPatient)
                                .addGap(18, 18, 18)
                                .addComponent(btnViewPatients, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdatePatient)
                                .addGap(213, 213, 213))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(92, 92, 92)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnMale)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtLname, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtFname, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnFemale)
                                    .addComponent(txtHno, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtStreet, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(boxCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(btnSingle)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnMarried)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(btnDeletePatient)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtPhone, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtZip, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)))))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addComponent(jLabel18))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel17))
                                .addGap(40, 40, 40)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtSearchID, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtSearchFname, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtSearchLname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(boxSearchCommunity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(btnSearchPatient)
                                .addGap(91, 91, 91)))
                        .addGap(0, 98, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(362, 362, 362)
                .addComponent(jLabel19)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel19)
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFname, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLname, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(btnMale))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFemale)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(boxCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(txtSearchID, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtZip, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtSearchFname, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearchLname, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(btnSingle)
                    .addComponent(btnMarried)
                    .addComponent(jLabel16)
                    .addComponent(boxSearchCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdatePatient)
                    .addComponent(btnDeletePatient)
                    .addComponent(btnViewPatients, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddPatient)
                    .addComponent(btnClear)
                    .addComponent(btnSearchPatient))
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1099, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1011, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPatientActionPerformed
        
        String patientId = txtPatientID.getText();
        String firstName = txtFname.getText();
        String lastName = txtLname.getText();
        String strAge = txtAge.getText();
        String sex = getSex();
        String houseNumber = txtHno.getText();
        String streetName = txtStreet.getText();
        String strCommunity = boxCommunity.getSelectedItem().toString();
        String strCity = txtCity.getText();
        String state = txtState.getText();
        String strZipCode = txtZip.getText();
        String phoneNo = txtPhone.getText();
        String maritalStatus = getMartialStatus();
        
        if (!isNumber(strAge))
        {
            JOptionPane.showMessageDialog(null,"Invalid Age. Please insert a number");
            return;
        }
        
        if (!isNumber(strZipCode))
        {
            JOptionPane.showMessageDialog(null,"Invalid Zip Code. Please insert a number");
            return;
        }
        
        if (!phoneNo.matches("^\\d{10}$"))
        {
            JOptionPane.showMessageDialog(null,"Enter a valid phone number");
            return;
        }
  
        if (patientId.equals("")||firstName.isEmpty()||lastName.isEmpty()||strAge.isEmpty()|| houseNumber.isEmpty()
                || streetName.isEmpty() || strCommunity.isEmpty() || strCity.isEmpty()
                || state.isEmpty() || strZipCode.isEmpty() || phoneNo.isEmpty() || sex.isEmpty() || maritalStatus.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "One or More fields are empty..!", "Empty Fields", 2);
        }
        
        else if (! patientDirectory.isValidPatientId(patientId))
        {
            JOptionPane.showMessageDialog(this, "Patient with same ID already exists.!! please check", "ID error",2);
            
        }
        else
        {
            int age = Integer.parseInt(strAge);
            int zipcode = Integer.parseInt(strZipCode);
           
            City city = new City(strCity);
            Community community = new Community(strCommunity, city);
            House house = new House(houseNumber,streetName,community,state,zipcode);
            Patient patient = new Patient(firstName, lastName, phoneNo, sex, age, house, maritalStatus,patientId);
            patientDirectory.addPatient(patient);

            displayPatients(patientDirectory.getPatientDirectory());

            JOptionPane.showMessageDialog(this, "Patient information added successfully.!!", "Added patient",1);
            clearField();
        }
    }//GEN-LAST:event_btnAddPatientActionPerformed

    private void btnViewPatientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientsActionPerformed
        
        displayPatients(patientDirectory.getPatientDirectory());
        
    }//GEN-LAST:event_btnViewPatientsActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        model.setRowCount(0);
        clearField();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnDeletePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePatientActionPerformed
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Delete this data", "Delete", dialogButton);
        if (dialogResult == 0)
        {
            row = patientTable.getSelectedRow();
            model.removeRow(row);
            String patinetId = model.getValueAt(row, 0).toString();
            patientDirectory.removePatient(patinetId);
            displayPatients(patientDirectory.getPatientDirectory());       
            
        }
        clearField();
    }//GEN-LAST:event_btnDeletePatientActionPerformed

    private void btnUpdatePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePatientActionPerformed
        
        String selectedPatientId = model.getValueAt(row, 0).toString(); 
        String updatepatientId = txtPatientID.getText();
        String updatefirstName = txtFname.getText();
        String updatelastName = txtLname.getText();
        String updatestrAge = txtAge.getText();
        String updatesex = getSex();
        String updateHno = txtHno.getText();
        String updatestreetName = txtStreet.getText();
        String updatecommunity = boxCommunity.getSelectedItem().toString();
        String updatecity = txtCity.getText();
        String updatestate = txtState.getText();
        String updatestrzipCode = txtZip.getText();
        String updatephoneNo = txtPhone.getText();
        String updateMaritalStatus = getMartialStatus();
        
        if (!isNumber(updatestrAge))
        {
            JOptionPane.showMessageDialog(null,"Invalid Age. Please insert a number to update");
            return;
        }
        
        if (!isNumber(updatestrzipCode))
        {
            JOptionPane.showMessageDialog(null,"Invalid Zip Code. Please insert a number to update");
            return;
        }
       
        if (!updatephoneNo.matches("^\\d{10}$"))
        {
            JOptionPane.showMessageDialog(null,"Enter a valid phone number to update");
            return;
        }
        
        int updateage = Integer.parseInt(updatestrAge);
        int updatezip = Integer.parseInt(updatestrzipCode);
        
        
        if (txtPatientID.getText().isEmpty()||txtFname.getText().isEmpty()||txtLname.getText().isEmpty()||txtAge.getText().isEmpty()|| txtHno.getText().isEmpty()
                || txtStreet.getText().isEmpty() || boxCommunity.getSelectedItem().toString().isEmpty() || txtCity.getText().isEmpty()
                || txtState.getText().isEmpty() || txtZip.getText().isEmpty() || txtPhone.getText().isEmpty() || updatesex.isEmpty() || updateMaritalStatus.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "One or More fields are empty..!", "Empty Fields",2);
        }
        
        else if (!selectedPatientId.equals(updatepatientId))
        {
            JOptionPane.showMessageDialog(this, "Patient Id cannot be updated.!! Please check", "ID error",2);
        }
        
        else
        {
        
            City city = new City(updatecity);
            Community community = new Community(updatecommunity, city);
            House house = new House(updateHno,updatestreetName,community,updatestate,updatezip);
            //Patient patient = new Patient(updatefirstName, updatelastName, updatephoneNo, updatesex, updateage, house, updateMaritalStatus,selectedPatientId);

            patientDirectory.getPatientDirectory().get(row).setFirstName(updatefirstName);
            patientDirectory.getPatientDirectory().get(row).setLastName(updatelastName);
            patientDirectory.getPatientDirectory().get(row).setAge(updateage);
            patientDirectory.getPatientDirectory().get(row).setSex(updatesex);
            patientDirectory.getPatientDirectory().get(row).setHouse(house);
            patientDirectory.getPatientDirectory().get(row).setPhoneNumber(updatephoneNo);
            patientDirectory.getPatientDirectory().get(row).setMaritalStatus(updateMaritalStatus);

            displayPatients(patientDirectory.getPatientDirectory());

            JOptionPane.showMessageDialog(this, "Patient information updated successfully.!!", "Updated patient",1);
        }
    }//GEN-LAST:event_btnUpdatePatientActionPerformed

    private void patientTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patientTableMouseClicked
        
        clearField();
        row = patientTable.getSelectedRow();
        col = patientTable.getColumnCount();
        
        txtPatientID.setText(model.getValueAt(row, 0).toString());
        txtFname.setText(model.getValueAt(row, 1).toString());
        txtLname.setText(model.getValueAt(row, 2).toString());
        txtAge.setText(model.getValueAt(row, 3).toString());
        txtHno.setText(model.getValueAt(row, 5).toString());
        txtStreet.setText(model.getValueAt(row, 6).toString());
        boxCommunity.setSelectedItem(model.getValueAt(row, 7).toString());
        txtCity.setText(model.getValueAt(row, 8).toString());
        txtState.setText(model.getValueAt(row, 9).toString());
        txtZip.setText(model.getValueAt(row, 10).toString());
        txtPhone.setText(model.getValueAt(row, 11).toString());
        if (model.getValueAt(row, 4).toString().equals("Male"))
        {
            btnMale.doClick();
        }
        if (model.getValueAt(row, 4).toString().equals("Female"))
        {
            btnFemale.doClick();
        }
        if (model.getValueAt(row, 12).toString().equals("Single"))
        {
            btnSingle.doClick();
        }
        if (model.getValueAt(row, 12).toString().equals("Married"))
        {
            btnMarried.doClick();
        }
       
    }//GEN-LAST:event_patientTableMouseClicked

    private void btnSearchPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchPatientActionPerformed
        
        String patientId = txtSearchID.getText();
        String fName = txtSearchFname.getText();
        String lName = txtSearchLname.getText();
        String community = boxSearchCommunity.getSelectedItem().toString();
        List<Patient> searchedList= new ArrayList<>();
        
        if( patientId.isEmpty() && fName.isEmpty() && lName.isEmpty() && community.equals("None")){
            JOptionPane.showMessageDialog(this, "All search fields are empty.!! Please check", "Empty Fields", 2);
            
        }
        else if(!patientId.isEmpty() && patientDirectory.isValidPatientId(patientId)){
            JOptionPane.showMessageDialog(this, "Patient Id doesnot exist.!! Please check", "ID error",2);
        }
        
        else if (!patientId.isEmpty())
        {
            
            Patient patient = patientDirectory.getPatient(patientId);
            
            if (!fName.isEmpty() && !fName.equals(patient.getFirstName()))
            {
                JOptionPane.showMessageDialog(this, "First Name and patien Id doesnot match.!!Please Check", "Invalid Details", 2);
            }
            
            if (!lName.isEmpty() && !lName.equals(patient.getLastName()))
            {
                JOptionPane.showMessageDialog(this, "Last Name and patien Id doesnot match.!!Please Check", "Invalid Details", 2);
            }
            searchedList.add(patient);
        }
        else
        {
            for(Patient patient : patientDirectory.getPatientDirectory()){
                House  house = patient.getHouse();
                if(community.equals("None") || community.equals(house.getCommunity().getCommunityName())){
                    if((fName.isEmpty() || fName.equalsIgnoreCase(patient.getFirstName())) && (lName.isEmpty() || lName.equalsIgnoreCase(patient.getLastName())))
                        searchedList.add(patient);
                }
            }
        }
        
        model.setRowCount(0);
        displayPatients(searchedList);
    }//GEN-LAST:event_btnSearchPatientActionPerformed
    
    public void clearField(){
        
        txtPatientID.setText("");
        txtFname.setText("");
        txtLname.setText("");
        txtAge.setText("");
        buttonGroupSex.clearSelection();
        txtHno.setText("");
        txtStreet.setText("");
        boxCommunity.setSelectedIndex(0);
        txtCity.setText("");
        txtState.setText("");
        txtZip.setText("");
        txtPhone.setText("");
        buttonGroupMarried.clearSelection();
        clearSearch();
    }
    public void clearSearch(){
        
        txtSearchID.setText("");
        txtSearchFname.setText("");
        txtSearchLname.setText("");
        boxSearchCommunity.setSelectedIndex(0);
    }
    public  void displayPatients(List<Patient> patients){
        
        
        model.setRowCount(0);
        for(Patient patient : patients){
            
            House house = patient.getHouse();
            Community community = house.getCommunity();
            Object[] objs = {patient.getPatientId(),  patient.getFirstName(), patient.getLastName(), patient.getAge(), patient.getSex(), house.getHno(),house.getStreet(),community.getCommunityName(),community.getCity().getCityName(),house.getState(),house.getZipcode(),patient.getPhoneNumber(),patient.getMaritalStatus()};
            model.addRow(objs);
        }
        
    }
    public String getSex(){
        
        if(btnMale.isSelected()) return "Male";
        else if(btnFemale.isSelected()) return "Female";
        return "";
    }
    
    public String getMartialStatus(){
        
        if(btnSingle.isSelected()) return "Single";
        else if(btnMarried.isSelected()) return "Married";
        return "";
    }
    
    
    
    private static boolean isNumber(String n) {
		try {
			Integer.parseInt(n);
			return true;
		} catch (NumberFormatException nfe) {
			return false;
		}
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxCommunity;
    private javax.swing.JComboBox<String> boxSearchCommunity;
    private javax.swing.JButton btnAddPatient;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDeletePatient;
    private javax.swing.JRadioButton btnFemale;
    private javax.swing.JRadioButton btnMale;
    private javax.swing.JRadioButton btnMarried;
    private javax.swing.JButton btnSearchPatient;
    private javax.swing.JRadioButton btnSingle;
    private javax.swing.JButton btnUpdatePatient;
    private javax.swing.JButton btnViewPatients;
    private javax.swing.ButtonGroup buttonGroupMarried;
    private javax.swing.ButtonGroup buttonGroupSex;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable patientTable;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtFname;
    private javax.swing.JTextField txtHno;
    private javax.swing.JTextField txtLname;
    private javax.swing.JTextField txtPatientID;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtSearchFname;
    private javax.swing.JTextField txtSearchID;
    private javax.swing.JTextField txtSearchLname;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtStreet;
    private javax.swing.JTextField txtZip;
    // End of variables declaration//GEN-END:variables

    
}
